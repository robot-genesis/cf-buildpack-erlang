#!/bin/bash

# Called as:
# ./supply <build> <cache> <deps> <index>

# build 	# The directory for the app
# cache 	# Directory location used to store assests during build process
# deps 		# Directory used to store dependencies provided by intalled buildpacks
# index 	# Nuber representing the ordinal position of the buildpack

# Dependencies are to be stored in {deps}/{index}/
# Expecpt for <deps>/<index>/ all other directories are read-only

# The <cache> directory is persistent for the final buildpack even after upgrade
# <cache> diretories provided to non final buildpacks are cleared if buildpack changes
# -------------------------------------------------------------------------------------

set -euo pipefail

BUILD_DIR=$1
CACHE_DIR=$2
DEPS_DIR=$3
DEPS_INDEX=$4
BUILDPACK=$(cd $(dirname $(dirname $0)); pwd)

## ------------------------------------------------------------------------------------

echo "-------> supply <-------"

## Cache ------------------------------------------------------------------------------

if [ -f ${BUILD_DIR}/.clean_cache ]; then
  echo "-------> Discarting previously cached depenencies"
  rm -r ${CACHE_DIR}/*
fi

## ------------------------------------------------------------------------------------


## Erlang  Runtime --------------------------------------------------------------------

OTP_VERSION="21.3.7"

if [ -f ${BUILD_DIR}/.preferred_otp_version ]; then
  OTP_VERSION=$(cat ${BUILD_DIR}/.preferred_otp_version)
fi

echo "-------> Using Erlang/OTP $OTP_VERSION"

OTP_PACKAGE="OTP-${OTP_VERSION}.tar.gz"
OTP_URL="https://s3.amazonaws.com/heroku-buildpack-elixir/erlang/cedar-14/${OTP_PACKAGE}"
#OTP_URL="http://packages.erlang-solutions.com/debian/pool/erlang-base-hipe_${OTP_VERSION}-1~ubuntu~bionic_amd64.deb"

if [ ! -f ${CACHE_DIR}/${OTP_PACKAGE} ] # If not cached
then
    # Not cached, so download and cache dependency
    echo "-------> Fetching Erlang/OTP ${OTP_VERSION}"
    echo "-------> ${OTP_URL}"
    wget -qO ${CACHE_DIR}/${OTP_PACKAGE} ${OTP_URL} || exit 1
    echo "-------> Done"
fi

## ------------------------------------------------------------------------------------
